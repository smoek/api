#%RAML 1.0
title: SMØK API Spec
version: v0
baseUri: https://letssmoek.io/
documentation:
  - title: Introduction
    content: !include documentation/introduction.md
  - title: TODO
    content: !include documentation/todo.md
types:
  UUID:
    type: string
    pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'

  ErrorType:
    type: object
    properties:
      id:
        type: string
        pattern: '[\w_]+\.([\w_]+\.)+[\w_]+'
        example: error.group.invalid
        description: |
          Machine-friendly error identifier. It should lead with error,
          dot-separated resources according to hierarchy, and a unique name for
          the message
      message:
        type: string
        example: No group with this ID exists.
        description: |
          A human-readable English text describing the error situation.

  SmoekStatusType:
    type: object
    properties:
      requested:
        type: boolean
        description: |
          True once SMØK has been requested. Further attempts to trigger SMØK
          must increase the support of it.
      confirmed:
        type: boolean
        description: |
          True for a certain time after a quorum has been achieved.
      supporters:
        type: array
        items: SessionType
        description: |
          The current supporters of a requested SMØK.
      expiresAt:
        type: datetime
        description: |
          The date and time when the SMØK will expire if no quorum has been
          achieved.

  SessionType:
    type: object
    properties:
      id: UUID
      name: string

  GroupType:
    type: object
    properties:
      id: UUID
      name: string
      sessions?:
        type: array
        items: SessionType
      status?: SmoekStatusType

/group:
  get:
    description: |
      List the existing groups.
    responses:
      200:
        body:
          application/json:
            type: array
            items: GroupType
  post:
    description: |
      Creates a new group.
    responses:
      201:
        description: |
          When the group was successfully created.
        body:
          application/json:
            type: GroupType
      409:
        description: |
          When a group with this name already exists.
        body:
          application/json:
            type: ErrorType
            example: |
              {
                "id": "error.group.already_exists",
                "message": "A group with name 'Smøk-Club' already exists."
              }

  /{groupId}:
    uriParameters:
      groupId:
        type: integer
        description: |
          ID of the group to open up a session with.
    get:
      description: |
        Request a group's current progress towards SMØK.

        In an imperfect world, this may be used to check the SMØK status of the
        group. In reality, push-based principles should be used.

        Inactive sessions may expire after nine hours.
      responses:
        200:
          body:
            application/json:
              type: GroupType
        404:
          description: |
            When no group with the given UUID exists.

    /session:
      post:
        description: |
          Creates a new session in the group, thereby creating a new session that
          lives as long as one is part of the group/active in the group.

          The session may expire after nine hours.
        responses:
          201:
            description: |
              When the session was successfully created.
            body:
              application/json:
                type: SessionType
          404:
            description: |
              When no group with the given UUID exists.
          409:
            description: |
              When a session with that name already exists in that group.

              Note that two sessions in different groups may use the same name.
            body:
              application/json:
                type: ErrorType
                example: |
                  {
                    "id": "error.session.already_exists",
                    "message": "A session named '<name>' already exists in group '<uuid>'."
                  }

      /{sessionId}:
        uriParameters:
          sessionId:
            type: integer
            description: |
              ID of the session that was opened up by posting to a group's session
              entity.
        delete:
          description: |
            Terminates an ongoing session with a group permanently. The session is
            lost and rejoining the group is necessary again in the future.

            Clients should work around this inconvenience for now, as
            participation in a group is considered highly transient.
          responses:
            200:
              description: |
                When the session was successfully deleted.
            404:
              description: |
                When no group or session with the given UUID exist.

        /smoek:
          post:
            description: |
              Request SMØK as the given session in the group, or support an
              ongoing effort for SMØK.
            responses:
              200:
                description: |
                  When the SMØK request was successfully submitted.
              body:
                application/json:
                  type: SmoekStatusType

          delete:
            description: |
              Withdraw your SMØK request or support. If there are other SMØK
              supporters the SMØK request will not be cancelled.
            responses:
              200:
                description: |
                  When your SMØK request was successfully cancelled.
                body:
                  application/json:
                    type: SmoekStatusType
              404:
                description: |
                  When no group or session with the given UUID exist.
              409:
                description: |
                  When the SMØK vote has already been confirmed.
                body:
                  application/json:
                    type: ErrorType
                    example: |
                      {
                        "id": "error.smoek.smoek_confirmed",
                        "message": "SMØK vote has already been confirmed."
                      }
